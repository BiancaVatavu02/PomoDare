<!DOCTYPE html>
<html lang="ro">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PomoDare</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin: 0;
      padding: 0;
      height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      transition: background 0.5s ease-in-out;
      overflow: hidden;
    }
    h1 {
      font-size: 3em;
      color: white;
      margin-top: 40px;
      text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);
    }
    .main-container {
      display: flex;
      gap: 20px;
      margin-top: 80px;
      transition: opacity 0.5s;
    }
    .container {
      width: 350px;
      padding: 20px;
      border-radius: 12px;
      background: rgba(0, 0, 0, 0.85);
      color: white;
      box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
    }
    #breakVideo {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 10;
      background: black;
      text-align: center;
    }
    #breakVideo iframe {
      width: 100vw;
      height: 100vh;
      border: none;
    }
    #resumeButton {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      padding: 12px 24px;
      font-size: 18px;
      font-weight: bold;
      background: white;
      color: black;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }
    #resumeButton:hover {
      background: #ddd;
    }
    .color-picker {
      position: fixed;
      bottom: 10px;
      right: 10px;
    }
    /* Stil pentru task-uri finalizate */
    .completed {
      text-decoration: line-through;
      opacity: 0.6;
    }
  </style>
</head>
<body>
  <h1 id="title">PomoDare</h1>
  <div class="main-container" id="mainContent">
    <div class="timer-container container">
      <h2>‚è≥ Pomodoro Timer</h2>
      <input type="number" id="customTime" placeholder="SeteazƒÉ timpul (min)" min="1">
      <h3><span id="timer">25:00</span></h3>
      <button onclick="setCustomTime()">SeteazƒÉ</button>
      <button onclick="startPomodoro()">Start</button>
      <button onclick="resetTimer()">Reset</button>
    </div>
    <div class="tasks-container container">
      <h2>üìã Task Manager</h2>
      <input type="text" id="taskInput" placeholder="AdaugƒÉ o sarcinƒÉ">
      <button onclick="addTask()">AdaugƒÉ</button>
      <ul id="taskList" class="task-list"></ul>
    </div>
    <div class="stats-container container">
      <h2>üìä Statistici</h2>
      <p>Taskuri completate: <span id="completedTasks">0</span></p>
      <p>»òedin»õe Pomodoro finalizate: <span id="pomodoroSessions">0</span></p>
    </div>
  </div>
  <div id="breakVideo">
    <iframe id="videoFrame" src="https://www.youtube.com/embed/jNk-7vnw3tM?start=182&autoplay=1&mute=1&loop=1&controls=0&showinfo=0&modestbranding=1" allowfullscreen></iframe>
    <button id="resumeButton" onclick="resumePomodoro()">Reia</button>
  </div>
  <input type="color" class="color-picker" id="bgColorPicker" onchange="setBackgroundColor(this.value)">
  <script>
    let timeLeft = 1500; // 25 minute default
    let timerInterval;
    let defaultTime = 1500; // re»õine timpul ini»õial pentru reset

    function setCustomTime() {
      const customMinutes = parseInt(document.getElementById("customTime").value);
      if (customMinutes > 0) {
        timeLeft = customMinutes * 60;
        defaultTime = timeLeft; // actualizeazƒÉ timpul implicit
        document.getElementById("timer").innerText = `${customMinutes}:00`;
      }
    }

    function startPomodoro() {
      clearInterval(timerInterval);
      timerInterval = setInterval(updateTimer, 1000);
    }

    function updateTimer() {
      if (timeLeft <= 0) {
        clearInterval(timerInterval);
        // IncrementƒÉm numƒÉrul de »ôedin»õe Pomodoro finalizate
        const sessionsElement = document.getElementById("pomodoroSessions");
        sessionsElement.innerText = parseInt(sessionsElement.innerText) + 1;

        // Afi»ôeazƒÉ break video »ôi ascunde con»õinutul principal
        document.getElementById("mainContent").style.opacity = "0";
        document.getElementById("title").style.opacity = "0";
        document.getElementById("breakVideo").style.display = "block";
        return;
      }
      timeLeft--;
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      document.getElementById("timer").innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;
    }

    function resetTimer() {
      clearInterval(timerInterval);
      timeLeft = defaultTime; // reseteazƒÉ la timpul implicit setat
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      document.getElementById("timer").innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;
      // AsigurƒÉ afi»ôarea con»õinutului principal »ôi ascunde break video
      document.getElementById("mainContent").style.opacity = "1";
      document.getElementById("title").style.opacity = "1";
      document.getElementById("breakVideo").style.display = "none";
    }

    function resumePomodoro() {
      document.getElementById("breakVideo").style.display = "none";
      document.getElementById("mainContent").style.opacity = "1";
      document.getElementById("title").style.opacity = "1";
    }

    function setBackgroundColor(color) {
      document.body.style.backgroundColor = color;
    }

    function addTask() {
      const taskInput = document.getElementById("taskInput");
      const taskText = taskInput.value.trim();

      if (taskText !== "") {
        const li = document.createElement("li");
        li.innerText = taskText;
        // AdaugƒÉ evenimentul de clic pentru a marca task-ul ca finalizat
        li.addEventListener("click", function() {
          if (!li.classList.contains("completed")) {
            li.classList.add("completed");
            // IncrementƒÉm numƒÉrul de taskuri completate
            const completedTasksElement = document.getElementById("completedTasks");
            completedTasksElement.innerText = parseInt(completedTasksElement.innerText) + 1;
          }
        });
        document.getElementById("taskList").appendChild(li);
        taskInput.value = ""; // ReseteazƒÉ c√¢mpul de input dupƒÉ adƒÉugare
      }
    }
  </script>
</body>
</html>

